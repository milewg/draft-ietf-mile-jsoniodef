start = iodef

;;; iodef.json: IODEF-Document

iodef = {
 version: text
 ? lang: lang
 ? format-id: text
 ? private-enum-name: text
 ? private-enum-id: text
 + Incidents: Incident
 * AdditionalData: AdditionalData
}

duration = "second" / "minute" / "hour" / "day" / "month" / "quarter" / "year" / "ext-value"
lang = "en" / "jp"
restriction = "public" / "partner" / "need-to-know" / "private" /
              "default" / "white" / "green" / "amber" / "red" /
              "ext-value"
DATETIME = text
URLtype = text
IDtype = text

AdditionalData  = {
 ? Name: text
 ? dtype: "boolean" / "byte" / "bytes" / "character" / "date-time" /
          "ntpstamp" / "integer" / "portlist" / "real" / "string" / "file" /
          "path" / "frame" / "packet" / "ipv4-packet" / "ipv6-packet" /
"url" /
          "csv" / "winreg" / "xml" / "ext-value"
 ? ext-dtype: text
 ? meaning: text
 ? formatid: text
 ? restriction: restriction
 ? ext-restriction: text
 ? observable-id: IDtype
}

SoftwareType = {
 ? SoftwareReference: SoftwareReference
 ? URL: URLtype
 ? Description: text
}

SoftwareReference = {
 ? value: text
 spec-name: text
 ? ext-spec-name: text
 ? dtype: text
 ? ext-dtype: text
}

Incident = {
 purpose: "traceback" / "mitigation" / "reporting" / "watch" / "other" / "ext-value"
 ? ext-purpose: text
 ? status: "new" / "in-progress"/ "forwarded" / "resolved" / "future" / "ext-value"
 ? ext-status: text
 ? lang: lang
 ? restriction: restriction
 ? ext-restriction: text
 ? observable-id: IDtype
 IncidentID: IncidentID
 ? AlternativeID: AlternativeID
 * RelatedActivity: RelatedActivity
 ? DetectTime: text
 ? StartTime: text
 ? EndTime: text
 ? RecoveryTime: text
 ? ReportTime: text
 GenerationTime: text
 * Description: text
 * Description_ML: text
 * Discovery: Discovery
 * Assessment: Assessment
 * Method: Method
 + Contacts: Contact
 * EventData: EventData
 * Indicator: Indicator
 ? History: History
 * AdditionalData: AdditionalData
}

IncidentID = {
 id: text
 name: text
 ? instance: text
 ? restriction: restriction
 ? ext-restriction: text
}

AlternativeID = {
 ? restriction: restriction
 ? ext-restriction: text
 + IncidentID: IncidentID
}

RelatedActivity = {
 ? restriction: restriction
 ? ext-restriction: text
 * IncidentID: IncidentID
 * URL: URLtype
 * ThreatActor: ThreatActor
 * Campaign: Campaign
 * IndicatorID: IndicatorID
 ? Confidence: Confidence
 * Description: text
 * AdditionalData: AdditionalData
}

ThreatActor = {
 ? restriction: restriction
 ? ext-restriction: text
 * ThreatActorID: text
 * URL: URLtype
 * Description: text
 * Description_ML: text
 * AdditionalData: AdditionalData
}

Campaign  = {
 ? restriction: restriction
 ? ext-restriction: text
 * CampaignID: text
 * URL: URLtype
 * Description: text
 * Description_ML: text
 * AdditionalData: AdditionalData
}

Contact = {
 role: "creator" / "reporter" / "admin" / "tech" / "provider" / "user" / "billing" / "legal" / "irt" / "abuse" / "cc" / "cc-irt" / "leo" / "vendor" / "vendor-support" / "victim" / "victim-notified" / "ext-value"
 ? ext-role: text
 type: "person" / "organization" / "ext-value"
 ? ext-type: text
 ? restriction: restriction
 ? ext-restriction: text
 * ContactName: text
 * ContactName_ML: text
 * ContactTitle: text
 * ContactTitle_ML: text
 * Description: text
 * Description_ML: text
 * RegistryHandle: RegistryHandle
 * PostalAddress: PostalAddress
 * Email: Email
 * Telephone: Telephone
 ? Timezone: text
; * Contact: Contact ; @@@ commented out due to deep recursion
 * AdditionalData: AdditionalData
}

RegistryHandle = {
 handle: text
 registry: "internic" / "apnic" / "arin" / "lacnic" / "ripe" / "afrinic" / "local" / "ext-value"
 ? ext-registry: text
}

PostalAddress = {
 ? type: text
 ? ext-type: text
 PAddress: text
 * Description: text
 * Description_ML: text
}

Email = {
 ? type: "direct" / "hotline" / "ext-value"
 ? ext-type: text
 EmailTo: text
 * Description: text
 * Description_ML: text
}

Telephone = {
 ? type: "wired" / "mobile" / "fax" / "hotline" / "ext-value"
 ? ext-type: text
 TelephoneNumber: text
 * Description: text
 * Description_ML: text
}

Discovery = {
 ? source: "nidps" / "hips" / "siem" / "av" / "third-party-monitoring" / "incident" / "os-log" / "application-log" / "device-log" / "network-flow" / "passive-dns" / "investiation" / "audit" / "international-notification" / "external-notification" / "leo" / "partner" / "actor" / "unknown" / "ext-value"
 ? ext-source: text
 ? restriction: restriction
 ? ext-restriction: text
 * Description: text
 * Description_ML: text
 * Contact: Contact
 * DetectionPattern: DetectionPattern
}

DetectionPattern = {
 ? restriction: restriction
 ? ext-restriction: text
 ? observable-id: IDtype
 Application: SoftwareType
 * Description: text
 * Description_ML: text
 * DetectionConfiguration: text
}

Method = {
 ? restriction: restriction
 ? ext-restriction: text
 * Reference: Reference
 * Description: text
 * Description_ML: text
 * AttackPattern: StructuredInformation
 * Vulnerability: StructuredInformation
 * Weakness: StructuredInformation
 ? AdditionalData: AdditionalData
}

StructuredInformation = {
 specID: text
 ? ext-specID: text
 ? contentID: text
 ? RawData: any
 ? URL: URLtype
}

Reference = {
 ? observable-id: IDtype
 ? ReferenceName: ReferenceName
 * URL: URLtype
 * Description: text
 * Description_ML: text
}

ReferenceName = {
 specIndex: int
 ID: text
}

Assessment = {
 ? occurrence: "actual" / "potential"
 ? restriction: restriction
 ? ext-restriction: text
 ? observable-id: IDtype
 * IncidentCategory: text
 * SystemImpact: SystemImpact
 * BusinessImpact: BusinessImpact
 * TimeImpact: TimeImpact
 * MonetaryImpact: MonetaryImpact
 * IntendedImpact: BusinessImpact
 * Counter: Counter
 * MitigatingFactor: text
 * MitigatingFactor_ML: text
 * Cause: text
 * Cause_ML: text
 ? Confidence: Confidence
 * AdditionalData: AdditionalData
}

SystemImpact = {
 ? severity: "low" / "medium" / "high"
 ? completion: "failed" / "succeeded"
 type: "takeover-account" / "takeover-service" / "takeover-system" / "cps-manipulation" / "cps-damage" / "availability-data" / "availability-account" / "availability-service" / "availability-system" / "damaged-system" / "damaged-data" / "breach-proprietary" / "breach-privacy" / "breach-credential" / "breack-configuration" / "integrity-data" / "integrity-configuration" / "integrity-hardware" / "traffic-redirection" / "monitoring-traffic" / "monitoring-host" / "policy" / "unknown" / "ext-value"
 ? ext-type: text
 * Description: text
 * Description_ML: text
}

BusinessImpact = {
 ? severity: "none" / "low" / "medium" / "high" / "unknown" / "ext-value"
 ? ext-severity: text
 type: "breach-proprietary" / "breach-privacy" / "breach-credential" / "loss-of-integrity" / "loss-of-service" / "theft-financial" / "theft-service" / "degraded-reputation" / "asset-damage" / "asset-manipulation" / "legal" / "extortion" / "unknown" / "ext-value"
 ? ext-type: text
 * Description: text
 * Description_ML: text
}

TimeImpact = {
 value: int
 ? severity: "low" / "medium" / "high"
 metric: "labor" / "elapsed" / "downtime" / "ext-value"
 ? ext-metric: text
 ? duration: "second" / "minute" / "hour" / "day" / "month" / "quarter" / "year" / "ext-value"
 ? ext-duration: text
}

MonetaryImpact = {
 value: int
 ? severity: "low" / "medium" / "high"
 ? currency: text
}

Confidence = {
 value: int
 rating: "low" / "medium" / "high" / "numeric" / "unknown" / "ext-value"
 ? ext-rating: text
}

History = {
 ? restriction: restriction
 ? ext-restriction: text
 + HistoryItem: HistoryItem
}

HistoryItem = {
 action: "nothing" / "contact-source-site" / "cotact-target-site" / "contact-sender" / "investigate" / "block-host" / "block-network" / "block-port" / "rate-limit-host" / "rate-limit-network" / "rate-limit-port" / "redirect-traffic" / "honeypot" / "upgrade-software" / "rebuild-asset" / "harden-asset" / "remediate-other" / "status-triage" / "status-new-info" / "watch-and-report" / "training" / "defined-coa" / "other" / "ext-value"
 ? ext-action: text
 ? restriction: restriction
 ? ext-restriction: text
 ? observable-id: IDtype
 DateTime: DATETIME
 ? IncidentID: IncidentID
 ? Contact: Contact
 * Description: text
 * Description_ML: text
 * DefinedCOA: text
 * AdditionalData: AdditionalData
}

EventData = {
 ? restriction: restriction
 ? ext-restriction: text
 ? observable-id: IDtype
 * Description: text
 * Description_ML: text
 ? DetectTime: DATETIME
 ? StartTime: DATETIME
 ? EndTime: DATETIME
 ? RecoveryTime: DATETIME
 ? ReportTime: DATETIME
 * Contact: Contact
 * Discovery: Discovery
 ? Assessment: any
 * Method: Method
 ? System: System
 * Expectation: Expectation
 * RecordData: RecordData
; * EventData: EventData ; @@@ commented out due to deep recursion
 * AdditionalData: AdditionalData
}

Expectation = {
 ? action: any
 ? ext-action: any
 ? severity: any
 ? restriction: restriction
 ? ext-restriction: text
 ? observable-id: IDtype
 * Description: text
 * Description_ML: text
 * DefinedCOA: any
 ? StartTime: any
 ? EndTime: any
 ? Contact: Contact
}

System = {
 ? category: "source" / "target" / "intermediate" / "sensor" /
"infrastructure" / "ext-value"
 ? ext-category: any
 ? interface: any
 ? spoofed: any
 ? virtual: any
 ? ownership: any
 ? ext-ownership: any
 ? restriction: restriction
 ? ext-restriction: text
 ? observable-id: IDtype
 Node: Node
 * NodeRole: NodeRole
 * Service: Service
 * OperatingSystem: any
 * Counter: Counter
 * AssetID: any
 * Description: text
 * Description_ML: text
 * AdditionalData: AdditionalData
}

Node = {
 * DomainData: DomainData
 * Address: Address
 ? PostalAddress: any
 * Location: text
 * Location_ML: text
 * Counter: Counter
}

Address = {
 value: any
 category: any
 ? ext-category: any
 ? vlan-name: any
 ? vlan-num: int
 ? observable-id: IDtype
}

NodeRole = {
 category: any
 ? ext-category: any
 * Description: text
 * Description_ML: text
}

Counter = {
 value: text
 type: "count" / "peak" / "average" / "ext-value"
 ? ext-type: text
 unit: "byte" / "mbit" / "packet" / "flow" / "session" / "alert" / "message" / "event" / "host" / "site" / "organization" / "ext-value"
 ? ext-unit: text
 ? meaning: text
 ? meaning_ML: text
 ? duration: duration
 ? ext-duration: text
}

DomainData = {
 system-status: "spoofed" / "fraudulent" / "innocent-hacked" / "innocent-hijacked" / "unknown" / "ext-value"
 ? ext-system-status: text
 domain-status: "reservedDelegation" / "assignedAndActive" / "assignedAndInactive" / "assignedAndOnHold" / "revoked" / "transferPending" / "registryLock" / "registrarLock" / "other" / "unknown" / "ext-value"
 ? ext-domain-status: text
 ? observable-id: IDtype
 Name: text
 ? DateDomainWasChecked: DATETIME
 ? RegistrationDate: DATETIME
 ? ExpirationDate: DATETIME
 * RelatedDNS: AdditionalData
 * NameServers: NameServers
 ? DomainContacts: DomainContacts
}

NameServers = {
 Server: text
 * Address: Address
}

DomainContacts = {
 ? SameDomainContact: text
 + Contact: Contact
}

Service = {
 ? ip-protocol: int
 ? observable-id: IDtype
 ? ServiceName: ServiceName
 ? Port: int
 ? Portlist: text
 ? ProtoCode: int
 ? ProtoType: int
 ? ProtoField: int
 + ApplicationHeaderField: AdditionalData
 ? EmailData: EmailData
 ? Application: SoftwareType
}

ServiceName = {
 ? IANAService: text
 * URL: URLtype
 * Description: text
 * Description_ML: text
}

EmailData = {
 ? observable-id: IDtype
 * EmailTo: text
 ? EmailFrom: text
 ? EmailSubject: text
 ? EmailX-Mailer: text
 * EmailHeaderField: AdditionalData
 ? EmailHeaders: text
 ? EmailBody: text
 ? EmailMessage: text
 * HashData: HashData
 * Signature: text
}

RecordData = {
 ? restriction: restriction
 ? ext-restriction: text
 ? observable-id: IDtype
 ? DateTime: DATETIME
 * Description: text
 * Description_ML: text
 ? Applicadtion: SoftwareType
 * RecordPattern: RecordPattern
 * RecordItem: AdditionalData
 * URL: URLtype
 * FileData: FileData
 * WindowsRegistryKeysModified: WindowsRegistryKeysModified
 * CertificateData: CertificateData
 * AdditionalData: AdditionalData
}

RecordPattern = {
 value: text
 type: "regex" / "binary" / "xpath" / "ext-value"
 ? ext-type: text
 ? offset: int
 ? offsetunit: "line" / "byte" / "ext-value"
 ? ext-offsetunit: text
 ? instance: int
}

WindowsRegistryKeysModified = {
 ? observable-id: IDtype
 + Key: Key
}

Key = {
 ? registryaction: "add-key" / "add-value" / "delete-key" / "delete-value" / "modify-key" / "modify-value" / "ext-value"
 ? ext-registryaction: text
 ? observable-id: IDtype
 KeyName: text
 ? KeyValue: text
}

CertificateData = {
 ? restriction: restriction
 ? ext-restriction: text
 ? observable-id: IDtype
 + Certificate: Certificate
}

Certificate = {
 ? observable-id: IDtype
 X509Data: text
 * Description: text
 * Description_ML: text
}

FileData = {
 ? restriction: restriction
 ? ext-restriction: text
 ? observable-id: IDtype
 + File: File
}

File = {
 ? observable-id: IDtype
 ? FileName: text
 ? FileSize: int
 ? FileType: text
 * URL: URLtype
 ? HashData: HashData
 * Signature: text
 ? AssociatedSoftware: SoftwareType
 * FileProperties: AdditionalData
}

HashData = {
 scope: "file-contents" / "file-pe-section" / "file-pe-iat" / "file-pe-resource" / "file-pdf-object" / "email-hash" /  "email-hash-header" / "email-hash-body"
 ? HashTargetID: text
 * Hash: Hash
 * FuzzyHash: FuzzyHash
}

Hash = {
 DigestMethod: text
 DigestValue: text
 ? CanonicalizationMethod: any
 ? Application: SoftwareType
}

FuzzyHash = {
; FuzzyHashValue: ExtensionType ; @@@ Is it correct??
 + FuzzyHashValue: text
 ? Application: SoftwareType
 * AdditionalData: AdditionalData
}

Indicator = {
 ? restriction: restriction
 ? ext-restriction: text
 IndicatorID: IndicatorID
 * AlternativeIndicatorID: AlternativeIndicatorID
 * Description: text
 * Description_ML: text
 ? StartTime: DATETIME
 ? EndTime: DATETIME
 ? Confidence: Confidence
 * Contact: Contact
 ? Observable: Observable
 ? uid-ref: any
 ? IndicatorExpression: IndicatorExpression
 ? IndicatorReference: IndicatorReference
 * NodeRole: NodeRole
 * AttackPhase: AttackPhase
 * Reference: Reference
 * AdditionalData: AdditionalData
}

IndicatorID = {
 id: IDtype
 name: text
 version: text
}

AlternativeIndicatorID = {
 ? restriction: restriction
 ? ext-restriction: text
 + IndicatorReference: IndicatorReference
}

Observable = {
 ? restriction: restriction
 ? ext-restriction: text
 ? System: System
 ? Address: Address
 ? DomainData: DomainData
 ? EmailData: EmailData
 ? Service: Service
 ? WindowsRegistryKeysModified: WindowsRegistryKeysModified
 ? FileData: FileData
 ? CertificateData: CertificateData
 ? RegistryHandle: RegistryHandle
 ? RecordData: RecordData
 ? EventData: EventData
 ? Incident: Incident
 ? Expectation: Expectation
 ? Reference: Reference
 ? Assessment: Assessment
 ? DetectionPattern: DetectionPattern
 ? HistoryItem: HistoryItem
 ? BulkObservable: BulkObservable
 * AdditionalData: AdditionalData
}

BulkObservable = {
 ? type: any
 ? ext-type: any
 ? BulkObservableFormat: BulkObservableFormat
 BulkObservableList: text
 * AdditionalData: AdditionalData
} 

BulkObservableFormat = {
 ? Hash: Hash
 * AdditionalData: AdditionalData
}

IndicatorExpression = {
 ? operator: any
 ? ext-operator: text
; * IndicatorExpression: IndicatorExpression ; @@@ commented out due to deep recursion
 * Observable: any
 * uid-ref: any
 * IndicatorReference: IndicatorReference
 ? Confidence: Confidence
 * AdditionalData: AdditionalData
}

IndicatorReference = {
 ? uid-ref: any
 ? euid-ref: text
 ? version: text
}

AttackPhase = {
 * AttackPhaseID: text
 * URL: URLtype
 * Description: text
 * AdditionalData: AdditionalData
}

anymap = {
 * text => any
}
